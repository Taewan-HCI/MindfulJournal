{"version":3,"sources":["../src/Component.js"],"names":["BASE_UNIT","ReactLiveClock","props","date","children","timestamp","baseTime","Date","getTime","state","realTime","now","startTime","formattedString","ticking","interval","tickTimer","setInterval","updateClock","clearInterval","time","filter","format","timezone","tz","formattedTime","filteredTime","onChange","newTime","diff","clone","add","formatTime","moment","output","previousOutput","setState","childProps","Object","keys","includes","key","reduce","acc","React","Component","propTypes","PropTypes","string","oneOfType","number","bool","func","defaultProps"],"mappings":"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","file":"Component.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment-timezone';\n\nconst BASE_UNIT = 'milliseconds';\n\nexport default class ReactLiveClock extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const date = props.date || props.children || null;\n    const timestamp = moment();\n    const baseTime = date ? moment(new Date(date).getTime()) : timestamp;\n\n    this.state = {\n      realTime: !date,\n      now: baseTime,\n      baseTime,\n      startTime: timestamp,\n      formattedString: ''\n    };\n  }\n\n  componentDidMount() {\n    const {ticking, interval} = this.props;\n\n    if (ticking && interval) {\n      this.tickTimer = setInterval(() => {\n        this.updateClock();\n      }, interval);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.tickTimer) {\n      clearInterval(this.tickTimer);\n    }\n  }\n\n  formatTime(time) {\n    const {filter, format, timezone} = this.props;\n\n    if (timezone) {\n      time.tz(timezone);\n    }\n\n    const formattedTime = time.format(format);\n    const filteredTime = filter(formattedTime);\n\n    return filteredTime;\n  }\n\n  updateClock() {\n    const {realTime, formattedString} = this.state;\n    const {onChange} = this.props;\n    let now;\n\n    if (realTime) {\n      now = moment();\n    } else {\n      const {baseTime, startTime} = this.state;\n      const newTime = moment();\n      const diff = newTime.diff(startTime, BASE_UNIT);\n\n      now = baseTime.clone().add(diff, BASE_UNIT);\n    }\n\n    const formattedTime = this.formatTime(now);\n\n    if (formattedTime !== formattedString) {\n      onChange({\n        moment: now,\n        output: formattedTime,\n        previousOutput: formattedString\n      });\n    }\n\n    this.setState({\n      now,\n      formattedString: formattedTime\n    });\n  }\n\n  render() {\n    const {formattedString} = this.state;\n\n    const childProps = Object.keys(this.props)\n      .filter(key => !['date', 'interval', 'ticking', 'filter', 'format', 'timezone'].includes(key))\n      .reduce((acc, key) => {\n        acc[key] = this.props[key];\n        return acc;\n      }, {});\n\n    return (\n      <time {...childProps}>{ formattedString }</time>\n    );\n  }\n}\n\nReactLiveClock.propTypes = {\n  children: PropTypes.string,\n  date: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string\n  ]),\n  format: PropTypes.string,\n  interval: PropTypes.number,\n  ticking: PropTypes.bool,\n  timezone: PropTypes.string,\n  filter: PropTypes.func,\n  onChange: PropTypes.func\n};\n\nReactLiveClock.defaultProps = {\n  date: null,\n  format: 'HH:mm',\n  interval: 1000,\n  ticking: false,\n  timezone: null,\n  filter: date => date,\n  onChange: date => date\n};\n"]}