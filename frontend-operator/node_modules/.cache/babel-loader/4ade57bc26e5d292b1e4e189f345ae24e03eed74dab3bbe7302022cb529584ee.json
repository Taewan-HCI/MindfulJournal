{"ast":null,"code":"var _jsxFileName = \"/Users/taewankim/PycharmProjects/LLM_diary/frontend/src/pages/Writing.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useEffect, useState, useRef, React } from \"react\";\nimport { addDoc, doc, getDoc, setDoc, collection, serverTimestamp, onSnapshot, query, where, orderBy, getCountFromServer } from 'firebase/firestore';\nimport { auth, db } from \"../firebase-config\";\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Card from \"react-bootstrap/Card\";\nimport { ScaleLoader, BeatLoader } from \"react-spinners\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { ko } from 'date-fns/esm/locale';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Writing(props) {\n  _s();\n  const navigate = useNavigate();\n  function navigateToReview() {\n    navigate(\"/list\");\n  }\n\n  //화면과 기능 전환 정의를 위한 state\n  // let [sessionStatus, setSessionStatus] = useState(false) //세션 시작 확인\n  let [loading, setLoading] = useState(false); //로딩(request API) 확인\n\n  //현재 세션 정보\n  const sessionStatus = useRef(false);\n  const diaryNumber = useRef(\"\");\n  const receivedText = useRef(\"\");\n  const receivedDiary = useRef(\"\");\n\n  // let [inConversation, setInConversation] = useState(\"\")//봇,사용자 대화기록\n  let [inputUser, setInputUser] = useState(''); //사용자가 textinput에 입력한 내용\n  // let [promptForLLM, setPromptForLLM] = useState('') //LLM요청을 위한 promptset\n  let [prompt, setPrompt] = useState('');\n  let [diary, setDiary] = useState(\"\");\n\n  //기타\n  let [showConversation, setShowConversation] = useState(false); //대화 원본 보여주기/가리기\n\n  //whisper 관련\n\n  async function createNewDoc() {\n    const coll = collection(db, \"session\", props.userName, \"diary\");\n    const existingSession = await getCountFromServer(coll);\n    const sessionNum = await (existingSession.data().count + 1);\n    diaryNumber.current = String(sessionNum);\n    await setDoc(doc(db, \"session\", props.userName, \"diary\", String(sessionNum)), {\n      outputFromLM: \"오늘 있었던 일에 대해 듣고 싶어요. 정해진 규칙이 없으니 자유롭게 얘기해주세요.\",\n      conversation: [],\n      isFinish: false,\n      module: \"\",\n      diary: \"\"\n    });\n    sessionStatus.current = true;\n    setLoading(true);\n  }\n  async function submitDiary() {\n    const current = new Date();\n    const date = `${current.getFullYear()}년 ${current.getMonth() + 1}월 ${current.getDate()}일`;\n    const coll = collection(db, \"session\", props.userName, \"diary_complete\");\n    const existingSession = await getCountFromServer(coll);\n    const diaryNum = await (existingSession.data().count + 1);\n    await setDoc(doc(db, \"session\", props.userName, \"diary_complete\", String(diaryNum)), {\n      diaryNum: diaryNum,\n      content: diary,\n      createdAt: date,\n      like: 0\n    });\n    navigateToReview();\n  }\n\n  //사용자-sessionID의 doc을 계속 관찰하고 있다가 업데이트가 발생하면 prompt를 업데이트 하는 useEffect 함수\n  useEffect(() => {\n    if (sessionStatus) {\n      if (diaryNumber.current != \"\") {\n        const unsuscribe = onSnapshot(doc(db, \"session\", props.userName, \"diary\", String(diaryNumber.current)), doc => {\n          // console.log(doc.data()[\"outputFromLM\"]);\n          receivedText.current = doc.data()[\"outputFromLM\"];\n          const response = receivedText.current;\n          getLastSentence(response);\n        });\n        const unsuscribe2 = onSnapshot(doc(db, \"session\", props.userName, \"diary\", String(diaryNumber.current)), doc => {\n          // console.log(doc.data()[\"outputFromLM\"]);\n          receivedDiary.current = doc.data()[\"diary\"];\n          const response = receivedDiary.current;\n          setDiary(response);\n          setLoading(false);\n        });\n        return () => unsuscribe();\n        return () => unsuscribe2();\n      }\n    }\n  });\n\n  /*async function getLastSentence(response) {\n      let output = \"\"\n      // console.log(response)\n      let loc_1 = await response.lastIndexOf(\"나: \");\n      let temp_text = await response.slice(loc_1 + 3);\n      // console.log(temp_text)\n      if (temp_text.includes(\"\\\\n\")) {\n          let loc_2 = await temp_text.indexOf(\"\\\\n\");\n          output = await temp_text.substring(0, loc_2)\n      } else {\n          let loc_2 = await temp_text.indexOf(\"사용자:\");\n          output = await temp_text.substring(0, loc_2)\n      }\n      // let addconversation = inConversation + 'A: ' + output + '\\n'\n      // setInConversation(addconversation)\n      let a = setTimeout(() => {\n          setPrompt(output)\n          console.log(prompt)\n          if ((prompt).trim() === \"\") {\n              setLoading(true)\n          } else {\n              setLoading(false)\n          }\n          // setLoading(false)\n      }, 10)\n      return () => {\n          clearTimeout(a)\n      }\n  }*/\n\n  async function getLastSentence(response) {\n    // let addconversation = inConversation + 'A: ' + output + '\\n'\n    // setInConversation(addconversation)\n    let a = setTimeout(() => {\n      setPrompt(response);\n      console.log(prompt);\n      if (prompt.trim() === \"\") {\n        setLoading(true);\n      } else {\n        setLoading(false);\n      }\n      // setLoading(false)\n    }, 10);\n    return () => {\n      clearTimeout(a);\n    };\n  }\n  async function assemblePrompt() {\n    const readyRequest = [];\n    const docRef3 = doc(db, \"session\", props.userName, \"diary\", String(diaryNumber.current));\n    const docSnap = await getDoc(docRef3);\n    if (docSnap.exists()) {\n      const readyRequest = docSnap.data().conversation;\n      console.log(readyRequest);\n      requestPrompt(readyRequest, props.userName, diaryNumber.current);\n    } else {\n      // doc.data() will be undefined in this case\n      console.log(\"No such document!\");\n    }\n  }\n  function requestPrompt(text, user, num) {\n    // console.log(text)\n    return fetch('http://localhost:8000', {\n      method: 'POST',\n      body: JSON.stringify({\n        'text': text,\n        'user': user,\n        'num': num\n      })\n    }).catch(err => console.log(err));\n  }\n  function requestSummerization() {\n    setLoading(true);\n    return fetch('http://localhost:8000/diary', {\n      method: 'POST',\n      body: JSON.stringify({\n        'user': props.userName,\n        'num': diaryNumber.current\n      })\n    }).catch(err => console.log(err));\n  }\n  function shuffleArray(array) {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n  }\n\n  /*    function shuffleArray(array) {\n          return array\n      }*/\n\n  /*async function addConversationFromUser(input) {\n      let temp = \"나: \" + prompt + \"\\\\n\" + '사용자: ' + input + \"\\\\n\";\n      const docRef2 = doc(db, \"session\", props.userName, \"diary\", String(diaryNumber.current));\n      const docSnap2 = await getDoc(docRef2);\n      if (docSnap2.exists()) {\n          const message = docSnap2.data().conversation;\n          let temptxt = message + temp;\n          inConversation.current = temptxt;\n          let a = setTimeout(async () => {\n              await setDoc(docRef2, {\n                  conversation: temptxt,\n                  outputFromLM: \"\"\n              }, {merge: true});\n              assemblePrompt();\n              setLoading(true);\n          }, 500)\n          return () => {\n              clearTimeout(a)\n          }\n      } else {\n          console.log(\"데이터 없음\");\n      }\n  }*/\n\n  async function addConversationFromUser(input) {\n    let system_temp = {\n      \"role\": \"assistant\",\n      \"content\": prompt\n    };\n    let user_temp = {\n      \"role\": \"user\",\n      \"content\": input\n    };\n    const docRef2 = doc(db, \"session\", props.userName, \"diary\", String(diaryNumber.current));\n    const docSnap2 = await getDoc(docRef2);\n    if (docSnap2.exists()) {\n      const message = docSnap2.data().conversation;\n      message[message.length] = system_temp;\n      message[message.length] = user_temp;\n      let a = setTimeout(async () => {\n        await setDoc(docRef2, {\n          conversation: message,\n          outputFromLM: \"\"\n        }, {\n          merge: true\n        });\n        assemblePrompt();\n        setLoading(true);\n      }, 500);\n      return () => {\n        clearTimeout(a);\n      };\n    } else {\n      console.log(\"데이터 없음\");\n    }\n  }\n  if (sessionStatus.current === false) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading_box\",\n          children: \"\\uC624\\uB298\\uC758 \\uB9C8\\uC74C\\uCC59\\uAE40 \\uC138\\uC158\\uC744 \\uC2DC\\uC791\\uD569\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-grid gap-2\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              style: {\n                backgroundColor: \"007AFF\",\n                fontWeight: \"600\"\n              },\n              onClick: createNewDoc,\n              children: \"\\uC624\\uB298\\uC758 \\uB2E4\\uC774\\uC5B4\\uB9AC \\uC791\\uC131\\uD558\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: loading === true ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 45\n          }, this) : /*#__PURE__*/_jsxDEV(Userinput, {\n            prompt: prompt,\n            setInputUser: setInputUser,\n            inputUser: inputUser,\n            addConversationFromUser: addConversationFromUser,\n            requestSummerization: requestSummerization,\n            setLoading: setLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: diary === \"\" ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 37\n        }, this) : /*#__PURE__*/_jsxDEV(DiaryView, {\n          diary: diary,\n          submitDiary: submitDiary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 51\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 13\n    }, this);\n  }\n}\n_s(Writing, \"Wfja0tnt4Me7/MYM4m0a7D0o5uI=\", false, function () {\n  return [useNavigate];\n});\n_c = Writing;\nfunction Loading() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading_box\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(ScaleLoader, {\n                color: \"#007AFF\",\n                speedMultiplier: 0.9\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"\\uC9C0\\uAE08\\uAE4C\\uC9C0\\uC758 \\uC774\\uC57C\\uAE30\\uB97C \\uC815\\uB9AC\\uC911\\uC785\\uB2C8\\uB2E4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"writing_box\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            htmlFor: \"userInput\",\n            children: \"\\u270F\\uFE0F \\uB098\\uC758 \\uC77C\\uAE30 \\uC785\\uB825\\uD558\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"input\",\n            as: \"textarea\",\n            rows: 3,\n            id: \"userInput\",\n            disabled: true,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n            id: \"userInput\",\n            muted: true,\n            children: \"\\uD83D\\uDCDD \\uC815\\uD574\\uC9C4 \\uC591\\uC2DD\\uC740 \\uC5C6\\uC5B4\\uC694. \\uD3B8\\uC548\\uD558\\uACE0 \\uC790\\uC720\\uB86D\\uAC8C \\uCD5C\\uADFC\\uC5D0 \\uC788\\uC5C8\\uB358 \\uC77C\\uC744 \\uC791\\uC131\\uD574\\uC8FC\\uC138\\uC694.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-grid gap-2\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"primary\",\n                  disabled: true,\n                  style: {\n                    backgroundColor: \"007AFF\",\n                    fontWeight: \"600\"\n                  },\n                  children: \"\\uC751\\uB2F5 \\uAE30\\uB85D\\uD558\\uAE30\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 354,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-grid gap-2\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"secondary\",\n                  disabled: true,\n                  style: {\n                    backgroundColor: \"264362\",\n                    fontWeight: \"600\"\n                  },\n                  children: \"\\uC77C\\uAE30\\uB85C \\uC815\\uB9AC\\uD558\\uAE30\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 363,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 320,\n    columnNumber: 9\n  }, this);\n}\n\n//User input screen component\n_c2 = Loading;\nfunction Userinput(props) {\n  _s2();\n  //for textfield monitoring\n  const temp_input = useRef(\"\");\n  const handleOnKeyPress = e => {\n    if (e.key === \"Enter\") {\n      props.addConversationFromUser(temp_input.current);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"prompt_box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tte\",\n              children: props.prompt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"writing_box\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            htmlFor: \"userInput\",\n            children: \"\\u270F\\uFE0F \\uB098\\uC758 \\uC77C\\uAE30 \\uC785\\uB825\\uD558\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"input\",\n            as: \"textarea\",\n            rows: 3,\n            id: \"userInput\",\n            onChange: e => {\n              temp_input.current = e.target.value;\n            },\n            onKeyPress: handleOnKeyPress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n            id: \"userInput\",\n            muted: true,\n            children: \"\\uD83D\\uDCDD \\uC815\\uD574\\uC9C4 \\uC591\\uC2DD\\uC740 \\uC5C6\\uC5B4\\uC694. \\uD3B8\\uC548\\uD558\\uACE0 \\uC790\\uC720\\uB86D\\uAC8C \\uCD5C\\uADFC\\uC5D0 \\uC788\\uC5C8\\uB358 \\uC77C\\uC744 \\uC791\\uC131\\uD574\\uC8FC\\uC138\\uC694.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-grid gap-2\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"primary\",\n                  style: {\n                    backgroundColor: \"007AFF\"\n                  },\n                  onClick: () => {\n                    (function () {\n                      if (temp_input.current.length < 11) {\n                        alert('입력한 내용이 너무 짧아요. 조금 더 길게 적어볼까요?');\n                      } else {\n                        props.addConversationFromUser(temp_input.current);\n                      }\n                    })();\n                  },\n                  children: \"\\uC751\\uB2F5 \\uAE30\\uB85D\\uD558\\uAE30\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 423,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-grid gap-2\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"dark\",\n                  onClick: () => {\n                    props.requestSummerization();\n                  },\n                  children: \"\\uC77C\\uAE30\\uB85C \\uC815\\uB9AC\\uD558\\uAE30\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 439,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 391,\n    columnNumber: 9\n  }, this);\n}\n_s2(Userinput, \"Q2X5X63izei/ZqYOAI1lz2CBQAI=\");\n_c3 = Userinput;\nfunction DiaryView(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"inwriting_review_box\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        xs: 'auto',\n        md: 1,\n        className: \"g-4\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(Card, {\n            style: {\n              width: '100%'\n            },\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: [\" \", /*#__PURE__*/_jsxDEV(BeatLoader, {\n                  color: \"#007AFF\",\n                  size: 10\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 466,\n                  columnNumber: 46\n                }, this), \" \\uC77C\\uAE30 \\uC791\\uC131\\uC911\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 466,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n                className: \"mb-2 text-muted\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: \"\\uD575\\uC2EC\\uD0A4\\uC6CC\\uB4DC \\uB3C4\\uCD9C \\uC911\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 468,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 467,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: props.diary\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 471,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"submission\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-grid gap-2\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                style: {\n                  backgroundColor: \"007AFF\",\n                  fontWeight: \"600\"\n                },\n                onClick: () => {\n                  props.submitDiary();\n                },\n                children: \"\\uD83D\\uDCDD \\uC77C\\uAE30 \\uC800\\uC7A5\\uD558\\uACE0 \\uC885\\uB8CC\\uD558\\uAE30\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 479,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 478,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 458,\n    columnNumber: 9\n  }, this);\n}\n_c4 = DiaryView;\nexport default Writing;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Writing\");\n$RefreshReg$(_c2, \"Loading\");\n$RefreshReg$(_c3, \"Userinput\");\n$RefreshReg$(_c4, \"DiaryView\");","map":{"version":3,"names":["useEffect","useState","useRef","React","addDoc","doc","getDoc","setDoc","collection","serverTimestamp","onSnapshot","query","where","orderBy","getCountFromServer","auth","db","Container","Row","Col","Form","Button","Card","ScaleLoader","BeatLoader","DatePicker","ko","useNavigate","Writing","props","navigate","navigateToReview","loading","setLoading","sessionStatus","diaryNumber","receivedText","receivedDiary","inputUser","setInputUser","prompt","setPrompt","diary","setDiary","showConversation","setShowConversation","createNewDoc","coll","userName","existingSession","sessionNum","data","count","current","String","outputFromLM","conversation","isFinish","module","submitDiary","Date","date","getFullYear","getMonth","getDate","diaryNum","content","createdAt","like","unsuscribe","response","getLastSentence","unsuscribe2","a","setTimeout","console","log","trim","clearTimeout","assemblePrompt","readyRequest","docRef3","docSnap","exists","requestPrompt","text","user","num","fetch","method","body","JSON","stringify","catch","err","requestSummerization","shuffleArray","array","i","length","j","Math","floor","random","addConversationFromUser","input","system_temp","user_temp","docRef2","docSnap2","message","merge","backgroundColor","fontWeight","Loading","Userinput","temp_input","handleOnKeyPress","e","key","target","value","alert","DiaryView","width"],"sources":["/Users/taewankim/PycharmProjects/LLM_diary/frontend/src/pages/Writing.js"],"sourcesContent":["import {useEffect, useState, useRef, React} from \"react\";\nimport {\n    addDoc,\n    doc,\n    getDoc,\n    setDoc,\n    collection,\n    serverTimestamp,\n    onSnapshot,\n    query,\n    where,\n    orderBy,\n    getCountFromServer,\n} from 'firebase/firestore'\nimport {auth, db} from \"../firebase-config\";\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Card from \"react-bootstrap/Card\";\nimport {ScaleLoader, BeatLoader} from \"react-spinners\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport {ko} from 'date-fns/esm/locale';\nimport {useNavigate} from \"react-router-dom\";\n\nfunction Writing(props) {\n\n\n    const navigate = useNavigate()\n\n    function navigateToReview() {\n        navigate(\"/list\")\n    }\n\n    //화면과 기능 전환 정의를 위한 state\n    // let [sessionStatus, setSessionStatus] = useState(false) //세션 시작 확인\n    let [loading, setLoading] = useState(false) //로딩(request API) 확인\n\n\n    //현재 세션 정보\n    const sessionStatus = useRef(false)\n    const diaryNumber = useRef(\"\");\n    const receivedText = useRef(\"\");\n    const receivedDiary = useRef(\"\");\n\n    // let [inConversation, setInConversation] = useState(\"\")//봇,사용자 대화기록\n    let [inputUser, setInputUser] = useState('')//사용자가 textinput에 입력한 내용\n    // let [promptForLLM, setPromptForLLM] = useState('') //LLM요청을 위한 promptset\n    let [prompt, setPrompt] = useState('')\n    let [diary, setDiary] = useState(\"\")\n\n    //기타\n    let [showConversation, setShowConversation] = useState(false) //대화 원본 보여주기/가리기\n\n\n    //whisper 관련\n\n    async function createNewDoc() {\n        const coll = collection(db, \"session\", props.userName, \"diary\")\n        const existingSession = await getCountFromServer(coll)\n        const sessionNum = await (existingSession.data().count + 1)\n        diaryNumber.current = String(sessionNum)\n        await setDoc(doc(db, \"session\", props.userName, \"diary\", String(sessionNum)), {\n            outputFromLM: \"오늘 있었던 일에 대해 듣고 싶어요. 정해진 규칙이 없으니 자유롭게 얘기해주세요.\",\n            conversation: [],\n            isFinish: false,\n            module: \"\",\n            diary: \"\"\n        });\n        sessionStatus.current = true\n        setLoading(true)\n    }\n\n    async function submitDiary() {\n        const current = new Date();\n        const date = `${current.getFullYear()}년 ${current.getMonth() + 1}월 ${current.getDate()}일`;\n        const coll = collection(db, \"session\", props.userName, \"diary_complete\")\n        const existingSession = await getCountFromServer(coll)\n        const diaryNum = await (existingSession.data().count + 1)\n        await setDoc(doc(db, \"session\", props.userName, \"diary_complete\", String(diaryNum)), {\n            diaryNum: diaryNum,\n            content: diary,\n            createdAt: date,\n            like:0,\n        });\n        navigateToReview()\n\n\n\n    }\n\n\n    //사용자-sessionID의 doc을 계속 관찰하고 있다가 업데이트가 발생하면 prompt를 업데이트 하는 useEffect 함수\n    useEffect(() => {\n        if (sessionStatus) {\n            if (diaryNumber.current != \"\") {\n                const unsuscribe = onSnapshot(doc(db, \"session\", props.userName, \"diary\", String(diaryNumber.current)), doc => {\n                    // console.log(doc.data()[\"outputFromLM\"]);\n                    receivedText.current = doc.data()[\"outputFromLM\"]\n                    const response = receivedText.current;\n                    getLastSentence(response)\n                })\n                const unsuscribe2 = onSnapshot(doc(db, \"session\", props.userName, \"diary\", String(diaryNumber.current)), doc => {\n                    // console.log(doc.data()[\"outputFromLM\"]);\n                    receivedDiary.current = doc.data()[\"diary\"]\n                    const response = receivedDiary.current;\n                    setDiary(response)\n                    setLoading(false)\n\n                })\n                return () => unsuscribe();\n                return () => unsuscribe2();\n\n            }\n        }\n    })\n\n    /*async function getLastSentence(response) {\n        let output = \"\"\n        // console.log(response)\n        let loc_1 = await response.lastIndexOf(\"나: \");\n        let temp_text = await response.slice(loc_1 + 3);\n        // console.log(temp_text)\n        if (temp_text.includes(\"\\\\n\")) {\n            let loc_2 = await temp_text.indexOf(\"\\\\n\");\n            output = await temp_text.substring(0, loc_2)\n        } else {\n            let loc_2 = await temp_text.indexOf(\"사용자:\");\n            output = await temp_text.substring(0, loc_2)\n        }\n        // let addconversation = inConversation + 'A: ' + output + '\\n'\n        // setInConversation(addconversation)\n        let a = setTimeout(() => {\n            setPrompt(output)\n            console.log(prompt)\n            if ((prompt).trim() === \"\") {\n                setLoading(true)\n            } else {\n                setLoading(false)\n            }\n            // setLoading(false)\n        }, 10)\n        return () => {\n            clearTimeout(a)\n        }\n    }*/\n\n    async function getLastSentence(response) {\n        // let addconversation = inConversation + 'A: ' + output + '\\n'\n        // setInConversation(addconversation)\n        let a = setTimeout(() => {\n            setPrompt(response)\n            console.log(prompt)\n            if ((prompt).trim() === \"\") {\n                setLoading(true)\n            } else {\n                setLoading(false)\n            }\n            // setLoading(false)\n        }, 10)\n        return () => {\n            clearTimeout(a)\n        }\n    }\n\n    async function assemblePrompt() {\n        const readyRequest = []\n        const docRef3 = doc(db, \"session\", props.userName, \"diary\", String(diaryNumber.current));\n        const docSnap = await getDoc(docRef3);\n        if (docSnap.exists()) {\n            const readyRequest = docSnap.data().conversation;\n            console.log(readyRequest)\n            requestPrompt(readyRequest, props.userName, diaryNumber.current)\n        } else {\n            // doc.data() will be undefined in this case\n            console.log(\"No such document!\");\n        }\n    }\n\n    function requestPrompt(text, user, num) {\n        // console.log(text)\n        return fetch('http://localhost:8000', {\n            method: 'POST',\n            body: JSON.stringify({\n                'text': text,\n                'user': user,\n                'num': num\n            })\n        })\n            .catch(err => console.log(err));\n    }\n\n\n    function requestSummerization() {\n        setLoading(true)\n        return fetch('http://localhost:8000/diary', {\n            method: 'POST',\n            body: JSON.stringify({\n                'user': props.userName,\n                'num': diaryNumber.current\n            })\n        })\n            .catch(err => console.log(err));\n    }\n\n    function shuffleArray(array) {\n        for (let i = array.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [array[i], array[j]] = [array[j], array[i]];\n        }\n        return array\n    }\n\n    /*    function shuffleArray(array) {\n            return array\n        }*/\n\n\n    /*async function addConversationFromUser(input) {\n        let temp = \"나: \" + prompt + \"\\\\n\" + '사용자: ' + input + \"\\\\n\";\n        const docRef2 = doc(db, \"session\", props.userName, \"diary\", String(diaryNumber.current));\n        const docSnap2 = await getDoc(docRef2);\n        if (docSnap2.exists()) {\n            const message = docSnap2.data().conversation;\n            let temptxt = message + temp;\n            inConversation.current = temptxt;\n            let a = setTimeout(async () => {\n                await setDoc(docRef2, {\n                    conversation: temptxt,\n                    outputFromLM: \"\"\n                }, {merge: true});\n                assemblePrompt();\n                setLoading(true);\n            }, 500)\n            return () => {\n                clearTimeout(a)\n            }\n        } else {\n            console.log(\"데이터 없음\");\n        }\n    }*/\n\n    async function addConversationFromUser(input) {\n        let system_temp = {\"role\": \"assistant\", \"content\": prompt}\n        let user_temp = {\"role\": \"user\", \"content\": input};\n\n        const docRef2 = doc(db, \"session\", props.userName, \"diary\", String(diaryNumber.current));\n        const docSnap2 = await getDoc(docRef2);\n        if (docSnap2.exists()) {\n            const message = docSnap2.data().conversation;\n            message[message.length] = system_temp;\n            message[message.length] = user_temp;\n            let a = setTimeout(async () => {\n                await setDoc(docRef2, {\n                    conversation: message,\n                    outputFromLM: \"\"\n                }, {merge: true});\n                assemblePrompt();\n                setLoading(true);\n            }, 500)\n            return () => {\n                clearTimeout(a)\n            }\n        } else {\n            console.log(\"데이터 없음\");\n        }\n    }\n\n\n    if (sessionStatus.current === false) {\n        return (\n            <Container>\n                <Row>\n                    <div className=\"loading_box\">\n                        오늘의 마음챙김 세션을 시작합니다.\n                    </div>\n                </Row>\n                <Row>\n                    <Col>\n                        <div className=\"d-grid gap-2\">\n                            <Button\n                                variant=\"primary\"\n                                style={{backgroundColor: \"007AFF\", fontWeight: \"600\"}}\n                                onClick={createNewDoc}\n                            >오늘의 다이어리 작성하기\n                            </Button>\n                        </div>\n                    </Col>\n                    <Col>\n                    </Col>\n                </Row>\n            </Container>\n\n        )\n    } else {\n        return (\n            <Container>\n                <Row>\n                    <div>\n                        {loading === true ? <Loading/> :\n                            <Userinput prompt={prompt} setInputUser={setInputUser} inputUser={inputUser}\n                                       addConversationFromUser={addConversationFromUser}\n                                       requestSummerization={requestSummerization} setLoading={setLoading}/>}\n                    </div>\n                </Row>\n                <Row>\n                    {diary === \"\" ? <div></div> : <DiaryView diary={diary} submitDiary={submitDiary}/>}\n                </Row>\n            </Container>\n        )\n    }\n\n\n}\n\nfunction Loading() {\n    return (\n        <div>\n            <Container>\n                <Row>\n                    <Col>\n                        <div className=\"loading_box\">\n                            <div>\n                                <ScaleLoader\n                                    color=\"#007AFF\"\n                                    speedMultiplier={0.9}\n                                />\n                            </div>\n                            <div>지금까지의 이야기를 정리중입니다</div>\n                        </div>\n                    </Col>\n                </Row>\n                <Row>\n                    <div className=\"writing_box\">\n                        <Form.Label htmlFor=\"userInput\">✏️ 나의 일기 입력하기</Form.Label>\n                        <Form.Control\n                            type=\"input\"\n                            as=\"textarea\"\n                            rows={3}\n                            id=\"userInput\"\n                            disabled\n                            readOnly\n                        />\n                        <Form.Text id=\"userInput\" muted>\n                            📝 정해진 양식은 없어요. 편안하고 자유롭게 최근에 있었던 일을 작성해주세요.\n                        </Form.Text>\n                    </div>\n                    <Container>\n                        <Row>\n                            <Col>\n                                <div className=\"d-grid gap-2\">\n                                    <Button\n                                        variant=\"primary\"\n                                        disabled={true}\n                                        style={{backgroundColor: \"007AFF\", fontWeight: \"600\"}}\n                                    >응답 기록하기</Button>\n                                </div>\n                            </Col>\n                            <Col>\n                                <div className=\"d-grid gap-2\">\n                                    <Button\n                                        variant=\"secondary\"\n                                        disabled={true}\n                                        style={{backgroundColor: \"264362\", fontWeight: \"600\"}}\n                                    >일기로 정리하기</Button>\n                                </div>\n                            </Col>\n                        </Row>\n                    </Container>\n                </Row>\n            </Container>\n        </div>\n    )\n}\n\n//User input screen component\nfunction Userinput(props) {\n    //for textfield monitoring\n    const temp_input = useRef(\"\");\n\n\n    const handleOnKeyPress = e => {\n        if (e.key === \"Enter\") {\n            props.addConversationFromUser(temp_input.current)\n        }\n    }\n\n    return (\n        <div>\n            <Container>\n                <Row>\n                    <Col>\n                        <div className=\"prompt_box\">\n                            <div className=\"tte\">\n                                {props.prompt}\n                            </div>\n                        </div>\n                    </Col>\n                </Row>\n                <Row>\n                    <div className=\"writing_box\">\n                        <Form.Label htmlFor=\"userInput\">✏️ 나의 일기 입력하기</Form.Label>\n                        <Form.Control\n                            type=\"input\"\n                            as=\"textarea\"\n                            rows={3}\n                            id=\"userInput\"\n                            onChange={(e) => {\n                                temp_input.current = e.target.value\n                            }}\n                            onKeyPress={handleOnKeyPress}\n                        />\n                        <Form.Text id=\"userInput\" muted>\n                            📝 정해진 양식은 없어요. 편안하고 자유롭게 최근에 있었던 일을 작성해주세요.\n                        </Form.Text>\n                    </div>\n                    <Container>\n                        <Row>\n                            <Col>\n                                <div className=\"d-grid gap-2\">\n                                    <Button\n                                        variant=\"primary\"\n                                        style={{backgroundColor: \"007AFF\"}}\n                                        onClick={() => {\n                                            (function () {\n                                                if ((temp_input.current).length < 11) {\n                                                    alert('입력한 내용이 너무 짧아요. 조금 더 길게 적어볼까요?')\n                                                } else {\n                                                    props.addConversationFromUser(temp_input.current)\n                                                }\n                                            })()\n                                        }}>응답 기록하기</Button>\n                                </div>\n                            </Col>\n                            <Col>\n                                <div className=\"d-grid gap-2\">\n                                    <Button\n                                        variant=\"dark\"\n                                        onClick={() => {\n                                            props.requestSummerization()\n                                        }}\n                                    >일기로 정리하기</Button>\n                                </div>\n                            </Col>\n                        </Row>\n                    </Container>\n                </Row>\n            </Container>\n        </div>\n    )\n}\n\nfunction DiaryView(props) {\n    return (\n\n        <div className=\"inwriting_review_box\">\n            <Container>\n                <Row xs={'auto'} md={1} className=\"g-4\">\n                    <Col>\n                        <Card style={{\n                            width: '100%',\n                        }}>\n                            <Card.Body>\n                                <Card.Title> <BeatLoader color=\"#007AFF\" size={10}/> 일기 작성중</Card.Title>\n                                <Card.Subtitle className=\"mb-2 text-muted\">\n                                    <div>핵심키워드 도출 중</div>\n                                </Card.Subtitle>\n                                <Card.Text>\n                                    <div>{props.diary}</div>\n                                </Card.Text>\n                            </Card.Body>\n                        </Card>\n\n                        <Col>\n                            <div className=\"submission\"></div>\n                            <div className=\"d-grid gap-2\">\n                                <Button\n                                    variant=\"primary\"\n                                    style={{backgroundColor: \"007AFF\", fontWeight: \"600\"}}\n                                    onClick={()=>{\n                                        props.submitDiary()\n                                }}\n                                >📝 일기 저장하고 종료하기</Button>\n                            </div>\n                        </Col>\n\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n\n    )\n}\n\nexport default Writing"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}