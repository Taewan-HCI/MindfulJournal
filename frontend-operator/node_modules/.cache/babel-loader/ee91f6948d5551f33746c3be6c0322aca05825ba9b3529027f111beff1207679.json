{"ast":null,"code":"var _jsxFileName = \"/Users/taewankim/Documents/Research/NAVER intern/code_NAVER Intern project/proto_0220/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  let [inputMsg, setInputMsg] = useState('');\n  let [prompt, setPrompt] = useState('');\n  function predictNextSentence(text, temp, items) {\n    return fetch('http://0.0.0.0:8000/', {\n      method: 'POST',\n      body: JSON.stringify({\n        'text': text,\n        'temp': temp\n      })\n    }).then(response => response.json()).then(data => setPrompt(data));\n  }\n  function isErroneous(texts) {\n    return texts.includes('1') || texts.includes('0');\n  }\n  function concatTwo(texts) {\n    if (texts.split(\". \").length >= 2) {\n      return texts.split(\". \")[0] + \". \" + texts.split(\". \")[1] + \". \";\n    } else {\n      return texts;\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: prompt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => {\n          setInputMsg(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          predictNextSentence({\n            inputMsg\n          }, 0.5);\n        },\n        children: \"\\uC81C\\uBC1C \\uB418\\uBA74 \\uC88B\\uACA0\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"mShkTa1DyOGUxBTbFt60H/7VQd4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","useState","App","inputMsg","setInputMsg","prompt","setPrompt","predictNextSentence","text","temp","items","fetch","method","body","JSON","stringify","then","response","json","data","isErroneous","texts","includes","concatTwo","split","length","e","target","value"],"sources":["/Users/taewankim/Documents/Research/NAVER intern/code_NAVER Intern project/proto_0220/frontend/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport {useState} from \"react\";\n\nfunction App() {\n\n    let [inputMsg, setInputMsg] = useState('')\n    let [prompt, setPrompt] = useState('')\n    function predictNextSentence(text, temp, items) {\n    return fetch('http://0.0.0.0:8000/', {\n        method: 'POST',\n        body: JSON.stringify({\n            'text': text,\n            'temp': temp\n        })})\n        .then((response) => response.json())\n        .then((data) => setPrompt(data));\n}\n\nfunction isErroneous(texts) {\n    return (texts.includes('1') || texts.includes('0'))\n}\n\nfunction concatTwo(texts) {\n    if (texts.split(\". \").length >= 2) {\n        return texts.split(\". \")[0]+\". \"+texts.split(\". \")[1]+\". \";\n    }\n    else {\n        return texts;\n    }\n}\n\n\n  return (\n    <div className=\"App\">\n     <div>\n         <h4>{prompt}</h4>\n         <input onChange={(e)=>{setInputMsg(e.target.value)}}></input>\n        <button onClick={()=>{\n            predictNextSentence({inputMsg}, 0.5)\n        }}>제발 되면 좋겠다.</button>\n     </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,SAAQC,QAAQ,QAAO,OAAO;AAAC;AAE/B,SAASC,GAAG,GAAG;EAAA;EAEX,IAAI,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EAC1C,IAAI,CAACI,MAAM,EAAEC,SAAS,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACtC,SAASM,mBAAmB,CAACC,IAAI,EAAEC,IAAI,EAAEC,KAAK,EAAE;IAChD,OAAOC,KAAK,CAAC,sBAAsB,EAAE;MACjCC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjB,MAAM,EAAEP,IAAI;QACZ,MAAM,EAAEC;MACZ,CAAC;IAAC,CAAC,CAAC,CACHO,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKb,SAAS,CAACa,IAAI,CAAC,CAAC;EACxC;EAEA,SAASC,WAAW,CAACC,KAAK,EAAE;IACxB,OAAQA,KAAK,CAACC,QAAQ,CAAC,GAAG,CAAC,IAAID,KAAK,CAACC,QAAQ,CAAC,GAAG,CAAC;EACtD;EAEA,SAASC,SAAS,CAACF,KAAK,EAAE;IACtB,IAAIA,KAAK,CAACG,KAAK,CAAC,IAAI,CAAC,CAACC,MAAM,IAAI,CAAC,EAAE;MAC/B,OAAOJ,KAAK,CAACG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAC,IAAI,GAACH,KAAK,CAACG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAC,IAAI;IAC9D,CAAC,MACI;MACD,OAAOH,KAAK;IAChB;EACJ;EAGE,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,uBACnB;MAAA,wBACI;QAAA,UAAKhB;MAAM;QAAA;QAAA;QAAA;MAAA,QAAM,eACjB;QAAO,QAAQ,EAAGqB,CAAC,IAAG;UAACtB,WAAW,CAACsB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;QAAA;MAAE;QAAA;QAAA;QAAA;MAAA,QAAS,eAC9D;QAAQ,OAAO,EAAE,MAAI;UACjBrB,mBAAmB,CAAC;YAACJ;UAAQ,CAAC,EAAE,GAAG,CAAC;QACxC,CAAE;QAAA,UAAC;MAAU;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA;EACnB;IAAA;IAAA;IAAA;EAAA,QACD;AAEV;AAAC,GAxCQD,GAAG;AAAA,KAAHA,GAAG;AA0CZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}