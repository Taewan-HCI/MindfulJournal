{"ast":null,"code":"var _jsxFileName = \"/Users/taewankim/PycharmProjects/LLM_diary/frontend/src/pages/Writing.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, React } from \"react\";\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Card from \"react-bootstrap/Card\";\nimport { ScaleLoader, BeatLoader } from \"react-spinners\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Writing(props) {\n  _s();\n  //first, we need to set the date of the journal and create the doc for that specific date\n  let [newDiary, setNewDiary] = useState(\"\");\n  let [startDate, setStartDate] = useState(new Date());\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading_box\",\n        children: [\"\\uC791\\uC131\\uD560 \\uB2E4\\uC774\\uC5B4\\uB9AC\\uC758 \\uB0A0\\uC9DC\\uB97C \\uC120\\uD0DD\\uD574\\uC8FC\\uC138\\uC694\", /*#__PURE__*/_jsxDEV(DatePicker, {\n          selected: startDate,\n          onChange: date => setStartDate(date)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-grid gap-2\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            style: {\n              backgroundColor: \"007AFF\",\n              fontWeight: \"600\"\n            },\n            children: \"\\uC624\\uB298\\uC758 \\uB2E4\\uC774\\uC5B4\\uB9AC \\uC791\\uC131\\uD558\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n_s(Writing, \"glBUqxtNHr6XjeR+B2KmlbEn2zU=\");\n_c = Writing;\nexport default Writing;\nvar _c;\n$RefreshReg$(_c, \"Writing\");","map":{"version":3,"names":["useEffect","useState","React","Container","Row","Col","Form","Button","Card","ScaleLoader","BeatLoader","DatePicker","Writing","props","newDiary","setNewDiary","startDate","setStartDate","Date","date","backgroundColor","fontWeight"],"sources":["/Users/taewankim/PycharmProjects/LLM_diary/frontend/src/pages/Writing.js"],"sourcesContent":["import {useEffect, useState, React} from \"react\";\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Card from \"react-bootstrap/Card\";\nimport {ScaleLoader, BeatLoader} from \"react-spinners\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\n\nfunction Writing(props) {\n\n    //first, we need to set the date of the journal and create the doc for that specific date\n    let [newDiary, setNewDiary] = useState(\"\")\n    let [startDate, setStartDate] = useState(new Date());\n\n\n    return (\n        <Container>\n            <Row>\n                <div className=\"loading_box\">\n                    작성할 다이어리의 날짜를 선택해주세요\n                    <DatePicker selected={startDate} onChange={date => setStartDate(date)}/>\n                </div>\n            </Row>\n            <Row>\n                <Col>\n                    <div className=\"d-grid gap-2\">\n                        <Button\n                            variant=\"primary\"\n                            style={{backgroundColor: \"007AFF\", fontWeight: \"600\"}}\n                        >\n                            오늘의 다이어리 작성하기\n                        </Button>\n                    </div>\n                </Col>\n                <Col>\n\n                </Col>\n            </Row>\n        </Container>\n\n    )\n\n}\n\nexport default Writing"],"mappings":";;AAAA,SAAQA,SAAS,EAAEC,QAAQ,EAAEC,KAAK,QAAO,OAAO;AAChD,OAAOC,SAAS,MAAM,2BAA2B;AACjD,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,IAAI,MAAM,sBAAsB;AACvC,SAAQC,WAAW,EAAEC,UAAU,QAAO,gBAAgB;AACtD,OAAOC,UAAU,MAAM,kBAAkB;AACzC,OAAO,4CAA4C;AAAC;AAGpD,SAASC,OAAO,CAACC,KAAK,EAAE;EAAA;EAEpB;EACA,IAAI,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC1C,IAAI,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,IAAIiB,IAAI,EAAE,CAAC;EAGpD,oBACI,QAAC,SAAS;IAAA,wBACN,QAAC,GAAG;MAAA,uBACA;QAAK,SAAS,EAAC,aAAa;QAAA,WAAC,2GAEzB,uBAAC,UAAU;UAAC,QAAQ,EAAEF,SAAU;UAAC,QAAQ,EAAEG,IAAI,IAAIF,YAAY,CAACE,IAAI;QAAE;UAAA;UAAA;UAAA;QAAA,QAAE;MAAA;QAAA;QAAA;QAAA;MAAA;IACtE;MAAA;MAAA;MAAA;IAAA,QACJ,eACN,QAAC,GAAG;MAAA,wBACA,QAAC,GAAG;QAAA,uBACA;UAAK,SAAS,EAAC,cAAc;UAAA,uBACzB,QAAC,MAAM;YACH,OAAO,EAAC,SAAS;YACjB,KAAK,EAAE;cAACC,eAAe,EAAE,QAAQ;cAAEC,UAAU,EAAE;YAAK,CAAE;YAAA,UACzD;UAED;YAAA;YAAA;YAAA;UAAA;QAAS;UAAA;UAAA;UAAA;QAAA;MACP;QAAA;QAAA;QAAA;MAAA,QACJ,eACN,QAAC,GAAG;QAAA;QAAA;QAAA;MAAA,QAEE;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ;EAAA;IAAA;IAAA;IAAA;EAAA,QACE;AAIpB;AAAC,GAlCQT,OAAO;AAAA,KAAPA,OAAO;AAoChB,eAAeA,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}