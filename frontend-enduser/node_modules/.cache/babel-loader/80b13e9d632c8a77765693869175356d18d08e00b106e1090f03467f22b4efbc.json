{"ast":null,"code":"var _jsxFileName = \"/Users/taewankim/PycharmProjects/LLM_diary/frontend/src/pages/Auth.js\";\nimport { auth, provider } from \"../firebase-config\";\nimport { signInWithPopup } from 'firebase/auth';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Cookies from 'universal-cookie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cookies = new Cookies();\nexport const Auth = props => {\n  const {\n    setIsAuth\n  } = props;\n  const signInWithGoogle = async () => {\n    try {\n      const result = await signInWithPopup(auth, provider);\n      cookies.set(\"auth-token\", result.user.refreshToken);\n      setIsAuth(true);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading_box\",\n      children: \"\\uACC4\\uC18D\\uD558\\uC2DC\\uB824\\uBA74 \\uAD6C\\uAE00\\uACC4\\uC815\\uC744 \\uC774\\uC6A9\\uD55C \\uB85C\\uADF8\\uC778\\uC774 \\uD544\\uC694\\uD574\\uC694\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: signInWithGoogle,\n      children: \"SignIn with Google\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_c = Auth;\nexport default Auth;\nvar _c;\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["auth","provider","signInWithPopup","Container","Row","Col","Cookies","cookies","Auth","props","setIsAuth","signInWithGoogle","result","set","user","refreshToken","err","console","error"],"sources":["/Users/taewankim/PycharmProjects/LLM_diary/frontend/src/pages/Auth.js"],"sourcesContent":["import {auth, provider} from \"../firebase-config\"\nimport {signInWithPopup} from 'firebase/auth'\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Cookies from 'universal-cookie'\n\n\nconst cookies = new Cookies()\n\nexport const Auth = (props) => {\n    const {setIsAuth} = props;\n\n    const signInWithGoogle = async () => {\n        try {\n            const result = await signInWithPopup(auth, provider);\n            cookies.set(\"auth-token\", result.user.refreshToken);\n            setIsAuth(true)\n        } catch (err) {\n            console.error(err);\n        }\n\n\n    };\n\n    return (\n        <Container>\n            <div className=\"loading_box\">\n                계속하시려면 구글계정을 이용한 로그인이 필요해요\n            </div>\n            <button onClick={signInWithGoogle}>SignIn with Google</button>\n        </Container>\n    )\n}\n\nexport default Auth;\n\n"],"mappings":";AAAA,SAAQA,IAAI,EAAEC,QAAQ,QAAO,oBAAoB;AACjD,SAAQC,eAAe,QAAO,eAAe;AAC7C,OAAOC,SAAS,MAAM,2BAA2B;AACjD,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,OAAO,MAAM,kBAAkB;AAAA;AAGtC,MAAMC,OAAO,GAAG,IAAID,OAAO,EAAE;AAE7B,OAAO,MAAME,IAAI,GAAIC,KAAK,IAAK;EAC3B,MAAM;IAACC;EAAS,CAAC,GAAGD,KAAK;EAEzB,MAAME,gBAAgB,GAAG,YAAY;IACjC,IAAI;MACA,MAAMC,MAAM,GAAG,MAAMV,eAAe,CAACF,IAAI,EAAEC,QAAQ,CAAC;MACpDM,OAAO,CAACM,GAAG,CAAC,YAAY,EAAED,MAAM,CAACE,IAAI,CAACC,YAAY,CAAC;MACnDL,SAAS,CAAC,IAAI,CAAC;IACnB,CAAC,CAAC,OAAOM,GAAG,EAAE;MACVC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IACtB;EAGJ,CAAC;EAED,oBACI,QAAC,SAAS;IAAA,wBACN;MAAK,SAAS,EAAC,aAAa;MAAA,UAAC;IAE7B;MAAA;MAAA;MAAA;IAAA,QAAM,eACN;MAAQ,OAAO,EAAEL,gBAAiB;MAAA,UAAC;IAAkB;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QACtD;AAEpB,CAAC;AAAA,KAvBYH,IAAI;AAyBjB,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}