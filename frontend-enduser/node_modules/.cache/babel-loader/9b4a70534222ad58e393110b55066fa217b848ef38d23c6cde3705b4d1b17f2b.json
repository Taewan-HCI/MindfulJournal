{"ast":null,"code":"var _jsxFileName = \"/Users/taewankim/PycharmProjects/LLM_diary/frontend/src/pages/Writing.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useRef, React } from \"react\";\nimport { addDoc, doc, getDoc, setDoc, collection, serverTimestamp, onSnapshot, query, where, orderBy, getCountFromServer } from 'firebase/firestore';\nimport { auth, db } from \"../firebase-config\";\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Card from \"react-bootstrap/Card\";\nimport { ScaleLoader, BeatLoader } from \"react-spinners\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { ko } from 'date-fns/esm/locale';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Writing(props) {\n  _s();\n  //화면과 기능 전환 정의를 위한 state\n  // let [sessionStatus, setSessionStatus] = useState(false) //세션 시작 확인\n  let [loading, setLoading] = useState(false); //로딩(request API) 확인\n  const [tempText, setTemp] = useState(''); //get-last-sentence 확인\n  let [refresh, setRefresh] = useState(0);\n\n  //현재 세션 정보\n  let [currentSession, setCurrentSession] = useState(\"\"); //세션 넘버\n  const sessionStatus = useRef(false);\n  const diaryNumber = useRef(\"\");\n  const receivedText = useRef(\"\");\n  let [inConversation, setInConversation] = useState(\"\"); //봇,사용자 대화기록\n  let [inputUser, setInputUser] = useState(''); //사용자가 textinput에 입력한 내용\n  let [promptForLLM, setPromptForLLM] = useState(''); //LLM요청을 위한 promptset\n  let [prompt, setPrompt] = useState('기본 입력');\n\n  //기타\n  let [showConversation, setShowConversation] = useState(false); //대화 원본 보여주기/가리기\n\n  //whisper 관련\n\n  async function createNewDoc() {\n    sessionStatus.current = false;\n    const coll = collection(db, \"session\", props.userName, \"diary\");\n    const existingSession = await getCountFromServer(coll);\n    const sessionNum = await (existingSession.data().count + 1);\n    diaryNumber.current = String(sessionNum);\n    await setDoc(doc(db, \"session\", props.userName, \"diary\", String(sessionNum)), {\n      lastMessage: \"시작문장\",\n      isFinish: false,\n      module: \"1-1\"\n    });\n    sessionStatus.current = true;\n    setLoading(true);\n  }\n\n  //사용자-sessionID의 doc을 계속 관찰하고 있다가 업데이트가 발생하면 prompt를 업데이트 하는 useEffect 함수\n  useEffect(() => {\n    if (sessionStatus) {\n      if (diaryNumber.current != \"\") {\n        const unsuscribe = onSnapshot(doc(db, \"session\", props.userName, \"diary\", String(diaryNumber.current)), doc => {\n          console.log(doc.data()[\"lastMessage\"]);\n          receivedText.current = doc.data()[\"lastMessage\"];\n          const response = receivedText.current;\n          getLastSentence(response);\n        });\n        return () => unsuscribe();\n      }\n    }\n  });\n  async function getLastSentence(response) {\n    let output = \"\";\n    // console.log(response)\n    let loc_1 = await response.lastIndexOf(\"나: \");\n    let temp_text = await response.slice(loc_1 + 3);\n    // console.log(temp_text)\n    if (temp_text.includes(\"\\\\n\")) {\n      let loc_2 = await temp_text.indexOf(\"\\\\n\");\n      output = await temp_text.substring(0, loc_2);\n    } else {\n      let loc_2 = await temp_text.indexOf(\"사용자:\");\n      output = await temp_text.substring(0, loc_2);\n    }\n\n    // let addconversation = inConversation + 'A: ' + output + '\\n'\n    // setInConversation(addconversation)\n    let a = setTimeout(() => {\n      setPrompt(output);\n      console.log(output);\n    }, 1000);\n    return () => {\n      clearTimeout(a);\n    };\n    // console.log(output)\n    // setLoading(false)\n  }\n\n  if (sessionStatus === false) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading_box\",\n          children: \"\\uC624\\uB298\\uC758 \\uB9C8\\uC74C\\uCC59\\uAE40 \\uC138\\uC158\\uC744 \\uC2DC\\uC791\\uD569\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-grid gap-2\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              style: {\n                backgroundColor: \"007AFF\",\n                fontWeight: \"600\"\n              },\n              onClick: createNewDoc,\n              children: \"\\uC624\\uB298\\uC758 \\uB2E4\\uC774\\uC5B4\\uB9AC \\uC791\\uC131\\uD558\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this);\n  }\n}\n_s(Writing, \"rtd+23RNctXG1UGdVY/BmMrc4Xg=\");\n_c = Writing;\nfunction Loading() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading_box\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(ScaleLoader, {\n                color: \"#007AFF\",\n                speedMultiplier: 0.9\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"\\uC9C0\\uAE08\\uAE4C\\uC9C0\\uC758 \\uC774\\uC57C\\uAE30\\uB97C \\uC815\\uB9AC\\uC911\\uC785\\uB2C8\\uB2E4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"writing_box\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            htmlFor: \"userInput\",\n            children: \"\\u270F\\uFE0F \\uB098\\uC758 \\uC77C\\uAE30 \\uC785\\uB825\\uD558\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"input\",\n            as: \"textarea\",\n            rows: 3,\n            id: \"userInput\",\n            disabled: true,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n            id: \"userInput\",\n            muted: true,\n            children: \"\\uD83D\\uDCDD \\uC815\\uD574\\uC9C4 \\uC591\\uC2DD\\uC740 \\uC5C6\\uC5B4\\uC694. \\uD3B8\\uC548\\uD558\\uACE0 \\uC790\\uC720\\uB86D\\uAC8C \\uCD5C\\uADFC\\uC5D0 \\uC788\\uC5C8\\uB358 \\uC77C\\uC744 \\uC791\\uC131\\uD574\\uC8FC\\uC138\\uC694.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-grid gap-2\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"primary\",\n                  disabled: true,\n                  style: {\n                    backgroundColor: \"007AFF\",\n                    fontWeight: \"600\"\n                  },\n                  children: \"\\uC751\\uB2F5 \\uAE30\\uB85D\\uD558\\uAE30\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-grid gap-2\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"secondary\",\n                  disabled: true,\n                  style: {\n                    backgroundColor: \"264362\",\n                    fontWeight: \"600\"\n                  },\n                  children: \"\\uC77C\\uAE30 \\uC885\\uB8CC\\uD558\\uAE30\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 206,\n    columnNumber: 9\n  }, this);\n}\n\n//User input screen component\n/*function Userinput(props) {\n    //for textfield monitoring\n    let [temp_input, setTemp_input] = useState('')\n    return (\n        <div>\n            <Container>\n                <Row>\n                    <Col>\n                        <div className=\"prompt_box\">\n                            <div className=\"tte\">\n                                {props.prompt}\n                            </div>\n                        </div>\n                    </Col>\n                </Row>\n                <Row>\n                    <div className=\"writing_box\">\n                        <Form.Label htmlFor=\"userInput\">✏️ 나의 일기 입력하기</Form.Label>\n                        <Form.Control\n                            type=\"input\"\n                            as=\"textarea\"\n                            rows={3}\n                            id=\"userInput\"\n                            onChange={(e) => {\n                                setTemp_input(e.target.value)\n                            }}\n                        />\n                        <Form.Text id=\"userInput\" muted>\n                            📝 정해진 양식은 없어요. 편안하고 자유롭게 최근에 있었던 일을 작성해주세요.\n                        </Form.Text>\n                    </div>\n                    <Container>\n                        <Row>\n                            <Col>\n                                <div className=\"d-grid gap-2\">\n                                    <Button\n                                        variant=\"primary\"\n                                        style={{backgroundColor: \"007AFF\", fontWeight: \"600\"}}\n                                        onClick={() => {\n                                            (function () {\n                                                if (temp_input.length < 11) {\n                                                    alert('입력한 내용이 너무 짧아요. 조금 더 길게 적어볼까요?')\n                                                } else {\n                                                    props.addConversationFromUser(temp_input)\n                                                }\n                                            })()\n                                        }}>응답 기록하기</Button>\n                                </div>\n                            </Col>\n                            <Col>\n                                <div className=\"d-grid gap-2\">\n                                    <Button\n                                        variant=\"secondary\"\n                                        disabled={true}\n                                        style={{backgroundColor: \"264362\", fontWeight: \"600\"}}\n                                    >일기 종료하기</Button>\n                                </div>\n                            </Col>\n                        </Row>\n                    </Container>\n                </Row>\n            </Container>\n        </div>\n    )\n}*/\n_c2 = Loading;\nexport default Writing;\nvar _c, _c2;\n$RefreshReg$(_c, \"Writing\");\n$RefreshReg$(_c2, \"Loading\");","map":{"version":3,"names":["useEffect","useState","useRef","React","addDoc","doc","getDoc","setDoc","collection","serverTimestamp","onSnapshot","query","where","orderBy","getCountFromServer","auth","db","Container","Row","Col","Form","Button","Card","ScaleLoader","BeatLoader","DatePicker","ko","Writing","props","loading","setLoading","tempText","setTemp","refresh","setRefresh","currentSession","setCurrentSession","sessionStatus","diaryNumber","receivedText","inConversation","setInConversation","inputUser","setInputUser","promptForLLM","setPromptForLLM","prompt","setPrompt","showConversation","setShowConversation","createNewDoc","current","coll","userName","existingSession","sessionNum","data","count","String","lastMessage","isFinish","module","unsuscribe","console","log","response","getLastSentence","output","loc_1","lastIndexOf","temp_text","slice","includes","loc_2","indexOf","substring","a","setTimeout","clearTimeout","backgroundColor","fontWeight","Loading"],"sources":["/Users/taewankim/PycharmProjects/LLM_diary/frontend/src/pages/Writing.js"],"sourcesContent":["import {useEffect, useState, useRef, React} from \"react\";\nimport {\n    addDoc,\n    doc,\n    getDoc,\n    setDoc,\n    collection,\n    serverTimestamp,\n    onSnapshot,\n    query,\n    where,\n    orderBy,\n    getCountFromServer,\n} from 'firebase/firestore'\nimport {auth, db} from \"../firebase-config\";\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Card from \"react-bootstrap/Card\";\nimport {ScaleLoader, BeatLoader} from \"react-spinners\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport {ko} from 'date-fns/esm/locale';\n\nfunction Writing(props) {\n\n    //화면과 기능 전환 정의를 위한 state\n    // let [sessionStatus, setSessionStatus] = useState(false) //세션 시작 확인\n    let [loading, setLoading] = useState(false) //로딩(request API) 확인\n    const [tempText, setTemp] = useState('') //get-last-sentence 확인\n    let [refresh, setRefresh] = useState(0)\n\n    //현재 세션 정보\n    let [currentSession, setCurrentSession] = useState(\"\")//세션 넘버\n    const sessionStatus = useRef(false)\n    const diaryNumber = useRef(\"\");\n    const receivedText = useRef(\"\");\n    let [inConversation, setInConversation] = useState(\"\")//봇,사용자 대화기록\n    let [inputUser, setInputUser] = useState('')//사용자가 textinput에 입력한 내용\n    let [promptForLLM, setPromptForLLM] = useState('') //LLM요청을 위한 promptset\n    let [prompt, setPrompt] = useState('기본 입력')\n\n    //기타\n    let [showConversation, setShowConversation] = useState(false) //대화 원본 보여주기/가리기\n\n    //whisper 관련\n\n    async function createNewDoc() {\n        sessionStatus.current = false\n        const coll = collection(db, \"session\", props.userName, \"diary\")\n        const existingSession = await getCountFromServer(coll)\n        const sessionNum = await (existingSession.data().count + 1)\n        diaryNumber.current = String(sessionNum)\n        await setDoc(doc(db, \"session\", props.userName, \"diary\", String(sessionNum)), {\n            lastMessage: \"시작문장\",\n            isFinish: false,\n            module: \"1-1\"\n        });\n        sessionStatus.current = true\n        setLoading(true)\n    }\n\n    //사용자-sessionID의 doc을 계속 관찰하고 있다가 업데이트가 발생하면 prompt를 업데이트 하는 useEffect 함수\n    useEffect(() => {\n        if (sessionStatus) {\n            if (diaryNumber.current != \"\") {\n                const unsuscribe = onSnapshot(doc(db, \"session\", props.userName, \"diary\", String(diaryNumber.current)), doc => {\n                    console.log(doc.data()[\"lastMessage\"]);\n                    receivedText.current = doc.data()[\"lastMessage\"]\n                    const response = receivedText.current;\n                    getLastSentence(response)\n                })\n                return () => unsuscribe();\n            }\n\n        }\n    },)\n\n    async function getLastSentence(response) {\n        let output = \"\"\n        // console.log(response)\n        let loc_1 = await response.lastIndexOf(\"나: \");\n        let temp_text = await response.slice(loc_1 + 3);\n        // console.log(temp_text)\n        if (temp_text.includes(\"\\\\n\")) {\n            let loc_2 = await temp_text.indexOf(\"\\\\n\");\n            output = await temp_text.substring(0, loc_2)\n        }\n        else {\n            let loc_2 = await temp_text.indexOf(\"사용자:\");\n            output = await temp_text.substring(0, loc_2)\n        }\n\n        // let addconversation = inConversation + 'A: ' + output + '\\n'\n        // setInConversation(addconversation)\n        let a = setTimeout(() => {\n            setPrompt(output)\n            console.log(output)\n        }, 1000)\n        return () => {\n            clearTimeout(a)\n        }\n        // console.log(output)\n        // setLoading(false)\n    }\n\n\n\n\n    if (sessionStatus === false) {\n        return (\n            <Container>\n                <Row>\n                    <div className=\"loading_box\">\n                        오늘의 마음챙김 세션을 시작합니다.\n                    </div>\n                </Row>\n                <Row>\n                    <Col>\n                        <div className=\"d-grid gap-2\">\n                            <Button\n                                variant=\"primary\"\n                                style={{backgroundColor: \"007AFF\", fontWeight: \"600\"}}\n                                onClick={createNewDoc}\n                            >오늘의 다이어리 작성하기\n                            </Button>\n                        </div>\n                    </Col>\n                    <Col>\n\n                    </Col>\n                </Row>\n            </Container>\n\n        )\n    } else {\n        return (\n            <Container>\n                <Row>\n                    <div>\n                        <Loading/>\n                        {/*{loading === true ? <Loading/> :\n                            <Userinput prompt={prompt} setInputUser={setInputUser} inputUser={inputUser}\n                                       addConversationFromUser={addConversationFromUser}/>}*/}\n                    </div>\n\n\n                    {/*<div className=\"inwriting_review_box\">\n                        <Container>\n                            <Row xs={'auto'} md={1} className=\"g-4\">\n                                <Col>\n                                    <Card style={{\n                                        width: '100%',\n                                    }}>\n                                        <Card.Body>\n                                            <Card.Title> <BeatLoader color=\"#007AFF\" size={10}/> 일기 작성중</Card.Title>\n                                            <Card.Subtitle className=\"mb-2 text-muted\">\n                                                <div>핵심키워드 도출 중</div>\n                                            </Card.Subtitle>\n                                            <Card.Text>\n                                                오늘은 이기적인 사람들에 대해 생각해보았다. 나는 다른 사람을 배려하지만, 그들은 나를 그렇게 배려해주지는 않는 것 같다.\n                                                하지만, 나의\n                                                배려속에 상대방이 보답해주기를 바라는 마음이 있는 것은 아닐까? 이것은 '미숙한 착함'이 될 수 있다. 어떻게 하면 더 성숙할 수\n                                                있을지\n                                                고민해봐야겠다.\n                                            </Card.Text>\n                                        </Card.Body>\n                                    </Card>\n                                    <div\n                                        style={{\n                                            margin: \"1em auto 2em\"\n                                        }}>\n                                        <Button\n                                            variant=\"secondary\"\n                                            size=\"sm\"\n                                            style={{backgroundColor: \"007AFF\", fontWeight: \"600\"}}\n                                            onClick={() => {\n                                                // setOpenConversation()\n                                            }}>\n                                            {showConversation === true ? <div>▲ 전체 대화내용 닫기</div> :\n                                                <div>▼ 전체 대화내용 보기</div>}\n                                        </Button>\n                                    </div>\n                                </Col>\n                            </Row>\n                        </Container>\n                    </div>*/}\n                </Row>\n                <Row>\n                    <Col>\n                    </Col>\n                    <Col>\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n\n\n}\n\nfunction Loading() {\n    return (\n        <div>\n            <Container>\n                <Row>\n                    <Col>\n                        <div className=\"loading_box\">\n                            <div>\n                                <ScaleLoader\n                                    color=\"#007AFF\"\n                                    speedMultiplier={0.9}\n                                />\n                            </div>\n                            <div>지금까지의 이야기를 정리중입니다</div>\n                        </div>\n                    </Col>\n                </Row>\n                <Row>\n                    <div className=\"writing_box\">\n                        <Form.Label htmlFor=\"userInput\">✏️ 나의 일기 입력하기</Form.Label>\n                        <Form.Control\n                            type=\"input\"\n                            as=\"textarea\"\n                            rows={3}\n                            id=\"userInput\"\n                            disabled\n                            readOnly\n                        />\n                        <Form.Text id=\"userInput\" muted>\n                            📝 정해진 양식은 없어요. 편안하고 자유롭게 최근에 있었던 일을 작성해주세요.\n                        </Form.Text>\n                    </div>\n                    <Container>\n                        <Row>\n                            <Col>\n                                <div className=\"d-grid gap-2\">\n                                    <Button\n                                        variant=\"primary\"\n                                        disabled={true}\n                                        style={{backgroundColor: \"007AFF\", fontWeight: \"600\"}}\n                                    >응답 기록하기</Button>\n                                </div>\n                            </Col>\n                            <Col>\n                                <div className=\"d-grid gap-2\">\n                                    <Button\n                                        variant=\"secondary\"\n                                        disabled={true}\n                                        style={{backgroundColor: \"264362\", fontWeight: \"600\"}}\n                                    >일기 종료하기</Button>\n                                </div>\n                            </Col>\n                        </Row>\n                    </Container>\n                </Row>\n            </Container>\n        </div>\n    )\n}\n\n//User input screen component\n/*function Userinput(props) {\n    //for textfield monitoring\n    let [temp_input, setTemp_input] = useState('')\n    return (\n        <div>\n            <Container>\n                <Row>\n                    <Col>\n                        <div className=\"prompt_box\">\n                            <div className=\"tte\">\n                                {props.prompt}\n                            </div>\n                        </div>\n                    </Col>\n                </Row>\n                <Row>\n                    <div className=\"writing_box\">\n                        <Form.Label htmlFor=\"userInput\">✏️ 나의 일기 입력하기</Form.Label>\n                        <Form.Control\n                            type=\"input\"\n                            as=\"textarea\"\n                            rows={3}\n                            id=\"userInput\"\n                            onChange={(e) => {\n                                setTemp_input(e.target.value)\n                            }}\n                        />\n                        <Form.Text id=\"userInput\" muted>\n                            📝 정해진 양식은 없어요. 편안하고 자유롭게 최근에 있었던 일을 작성해주세요.\n                        </Form.Text>\n                    </div>\n                    <Container>\n                        <Row>\n                            <Col>\n                                <div className=\"d-grid gap-2\">\n                                    <Button\n                                        variant=\"primary\"\n                                        style={{backgroundColor: \"007AFF\", fontWeight: \"600\"}}\n                                        onClick={() => {\n                                            (function () {\n                                                if (temp_input.length < 11) {\n                                                    alert('입력한 내용이 너무 짧아요. 조금 더 길게 적어볼까요?')\n                                                } else {\n                                                    props.addConversationFromUser(temp_input)\n                                                }\n                                            })()\n                                        }}>응답 기록하기</Button>\n                                </div>\n                            </Col>\n                            <Col>\n                                <div className=\"d-grid gap-2\">\n                                    <Button\n                                        variant=\"secondary\"\n                                        disabled={true}\n                                        style={{backgroundColor: \"264362\", fontWeight: \"600\"}}\n                                    >일기 종료하기</Button>\n                                </div>\n                            </Col>\n                        </Row>\n                    </Container>\n                </Row>\n            </Container>\n        </div>\n    )\n}*/\n\nexport default Writing"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}